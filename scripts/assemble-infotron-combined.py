#!/usr/bin/env python3

# From old infotron artwork files, generate a single 'combined'-style
# image that's compatible with Murphy's Revenge.
import os

import click

Ignore = "Ignore"

# MR ICNS resource number --> (15-wide tilemap identity w/ 0 at topleft, name)
legacy_map = {
    128: (0, "circuit"),
    129: (1, "black"),
    130: (2, "exit"),
    131: (37, "chip"),
    132: (22, "port-4-way"),
    133: (3, "green-disk"),
    134: (4, "yellow-disk"),
    135: (5, "red-disk"),
    136: Ignore,
    137: Ignore,
    139: None,
    140: None,
    141: None,
    142: None,
    143: None,
    144: None,
    145: (400, "murphy-scared-shitless"),
    147: (469, "murphy-zapped-4"),
    194: (389, "murphy-act-right"),
    195: (388, "murphy-act-left"),
    196: (374, "murphy-push-left"),
    197: (376, "murphy-push-right"),
    198: (9, "murphy"),
    199: (391, "murphy-act-up"),
    200: (390, "murphy-act-down"),
    201: (361, "murphy-left-1"),
    202: (370, "murphy-right-1"),
    203: (368, "murphy-left-2"),
    204: None,
    205: None,
    206: None,
    214: None,
    250: (102, "black-but-nothing"),
    300: (194, "zap-1"),
    301: (195, "zap-2"),
    302: (196, "zap-3-8"),
    303: (197, "zap-4"),
    304: (198, "zap-5"),
    305: (199, "zap-6"),
    350: (272, "shrink-info-1"),
    351: (273, "shrink-info-2"),
    352: (274, "shrink-info-3"),
    353: (275, "shrink-info-4"),
    354: (276, "shrink-info-5"),
    355: (277, "shrink-info-6"),
    356: (278, "shrink-info-7"),
    357: (279, "shrink-info-8"),
    358: (280, "shrink-info-9"),
    400: (230, "shrink-red-disk-1"),
    401: (231, "shrink-red-disk-2"),
    402: (232, "shrink-red-disk-3"),
    403: (233, "shrink-red-disk-4"),
    404: (240, "shrink-red-disk-5"),
    405: (241, "shrink-red-disk-6"),
    406: (242, "shrink-red-disk-7"),
    407: (243, "shrink-red-disk-8"),
    450: (246, "shrink-circuit-1"),
    451: (247, "shrink-circuit-2"),
    452: (248, "shrink-circuit-3"),
    453: (249, "shrink-circuit-4"),
    454: (256, "shrink-circuit-5"),
    455: (257, "shrink-circuit-6"),
    456: (258, "shrink-circuit-7"),
    499: None,
    500: None,
    501: None,
    502: None,
    503: None,
    504: None,
    505: None,
    506: None,
    507: None,
    508: None,
    509: None,
    510: None,
    511: None,
    550: (176, "comp-1"),
    551: (177, "comp-2"),
    552: (178, "comp-3"),
    553: (179, "comp-4"),
    554: (180, "comp-5"),
    555: (181, "comp-6"),
    556: (182, "comp-7"),
    557: (183, "comp-8"),
    558: (184, "comp-9"),
    559: (185, "comp-10"),
    560: (192, "comp-11"),
    561: (193, "comp-12"),
    600: (200, "expl-1"),
    601: (201, "expl-2"),
    602: (208, "expl-3"),
    603: (209, "expl-4"),
    604: (210, "expl-5"),
    605: (211, "expl-6"),
    606: (212, "expl-7"),
    607: (213, "expl-8"),
    608: (214, "expl-9"),
    609: (215, "expl-10"),
    650: (297, "quark-1"),
    651: (304, "quark-2"),
    652: (305, "quark-3"),
    653: (306, "quark-4"),
    654: (307, "quark-5"),
    655: (308, "quark-6"),
    656: (309, "quark-7"),
    657: (310, "quark-8"),
    658: (311, "quark-9"),
    700: (289, "zonk-0deg"),
    701: (290, "zonk-45deg"),
    702: (291, "zonk-90deg"),
    703: (292, "zonk-135deg"),
    704: (293, "zonk-180deg"),
    705: (294, "zonk-225deg"),
    706: (295, "zonk-270deg"),
    707: (296, "zonk-315deg"),
    750: (57, "indestructible-block-1"),
    751: (64, "indestructible-block-2"),
    752: (65, "indestructible-block-3"),
    753: (66, "indestructible-block-4"),
    754: (67, "indestructible-block-5"),
    755: (68, "indestructible-block-6"),
    756: (69, "indestructible-block-7"),
    757: (70, "indestructible-block-8"),
    758: (71, "indestructible-block-9"),
    759: (72, "indestructible-block-10"),
    760: (73, "indestructible-block-11"),
    850: (262, "infotron-0deg"),
    851: (263, "infotron-90deg"),
    852: (264, "infotron-180deg"),
    854: (265, "infotron-270deg"),
    900: (17, "port-top"),
    902: (16, "port-right"),
    904: (19, "port-bottom"),
    906: (18, "port-left"),
    950: (21, "port-vertical"),
    952: (20, "port-horizontal"),
    1000: None,
    1001: None,
    1002: None,
    1003: None,
    1004: None,
    1005: None,
    1006: None,
    1007: None,
    1010: (33, "scissor-open-up"),
    1012: (34, "scissor-open-right"),
    1014: (35, "scissor-open-down"),
    1016: (36, "scissor-open-left"),
    1020: None,
    1022: None,
    1024: None,
    1026: None,
    1050: None,
    1051: None,
    1052: None,
    1053: None,
    1054: None,
    1055: None,
    1056: None,
    1057: None,
    1100: None,
    1102: None,
    1104: None,
    1105: None,
    1106: None,
    1150: None,
    1152: None,
    1154: None,
    1156: None,
    1200: None,
    1201: None,
    1202: None,
    1203: None,
    1204: None,
    1205: None,
    1206: None,
    1207: None,
    1208: None,
    1209: None,
    1210: None,
    1211: None,
}


@click.command()
@click.argument("src", type=click.Path(exists=True, resolve_path=True), nargs=-1)
@click.argument("dst", type=click.Path(exists=True, resolve_path=True), nargs=1)
def assemble_infotron_combined(src, dst):
    for info_file_name in src:
        pass

    for bcp_file_name in src:
        bcp_basename = os.path.basename(bcp_file_name)
        bcp_barename = os.path.splitext(bcp_basename)[0]
        json_file_name = os.path.join(dst, f"{bcp_barename}.json")
        with open(bcp_file_name, "rb") as bcp_file, open(
            json_file_name, "wb"
        ) as json_file:
            print(f"Converting {bcp_file_name} to {json_file_name}")
            _ = (bcp_file, json_file)


if __name__ == "__main__":
    assemble_infotron_combined()
